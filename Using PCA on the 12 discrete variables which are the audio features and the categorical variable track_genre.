df2trackgenre.head()

#The following code below has been sourced from https://builtin.com/machine-learning/pca-in-python.
from sklearn.preprocessing import StandardScaler

features = ['popularity', 'danceability', 'energy', 'key', 'loudness', 'mode', 'speechiness', 'acousticness', 'instrumentalness', 'liveness', 'valence', 'tempo']
# Separating out the features
x = df2trackgenre.loc[:, features].values

# Separating out the target
y = df2trackgenre.loc[:,['track_genre']].values

# Standardizing the features
x = StandardScaler().fit_transform(x)

from sklearn.decomposition import PCA

pca = PCA(n_components=2)

principalComponents = pca.fit_transform(x)

principalDf = pd.DataFrame(data = principalComponents
             , columns = ['principal component 1', 'principal component 2'])

principalDf.head()

dfPCA = pd.concat([principalDf, df[['track_genre']]], axis = 1)

dfPCA.head()

fig = plt.figure(figsize = (8,8))
ax = fig.add_subplot(1,1,1) 
ax.set_xlabel('Principal Component 1', fontsize = 15)
ax.set_ylabel('Principal Component 2', fontsize = 15)
ax.set_title('2 component PCA', fontsize = 20)

targets = ['acoustic', 'disco', 'opera', 'rock', 'piano']
colors = ['r', 'g', 'b', 'c', 'y']
for target, color in zip(targets,colors):
    indicesToKeep = df3['track_genre'] == target
    ax.scatter(df3.loc[indicesToKeep, 'principal component 1']
               , df3.loc[indicesToKeep, 'principal component 2']
               , c = color
               , s = 50)
ax.legend(targets)
ax.grid()

pca.explained_variance_ratio_

df3 = dfPCA

df3.head()
