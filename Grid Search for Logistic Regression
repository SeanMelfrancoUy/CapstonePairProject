#The following code below has been sourced from https://vitalflux.com/gridsearchcv-logistic-regression-machine-learning-examples/#:~:text=GridSearchCV%20Object%3A%20A%20GridSearchCV%20object,of%20parameters%20in%20the%20grid.
from sklearn.model_selection import GridSearchCV
from sklearn.linear_model import LogisticRegression
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import make_pipeline
 
#split dataset in features and target variable
feature_cols = ['tempo', 'popularity', 'energy', 'loudness', 'liveness', 'valence', 'danceability', 'instrumentalness', 'acousticness', 'speechiness', 'mode', 'key']
X = df2[feature_cols] # Features
y = df2.track_genre_encoded # Target variable
 
# Create a pipeline with scaler and logistic regression
pipe = make_pipeline(StandardScaler(), LogisticRegression(max_iter=1000, solver='saga', tol=0.1, class_weight='balanced'))
 
# Create a parameter grid
param_grid = {
    'logisticregression__C': [0.1, 1, 10, 100],
    'logisticregression__penalty': ['l1', 'l2']
}
 
# Create GridSearchCV object
grid_search = GridSearchCV(pipe, param_grid, cv=5)
 
# Fit the model
grid_search.fit(X, y)
 
# Print best parameters and best score
print("Best Parameters:", grid_search.best_params_)
print("Best Score:", grid_search.best_score_)
